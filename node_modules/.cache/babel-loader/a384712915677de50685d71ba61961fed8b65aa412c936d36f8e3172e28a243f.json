{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prasa\\\\Downloads\\\\react\\\\inotebook\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n\n  // Fetch  user all notes on database\n  const getNotes = async () => {\n    // ToDo: API call\n    const responce = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\n      }\n    });\n    console.log(\"adding a new note\");\n    let note = {\n      _id: \"6744068dc5963aee5981e57b7\",\n      user: \"673e0192cb4bebc9ea8656eb\",\n      title: title,\n      description: description,\n      tag: tag,\n      date: \"2024-11-25T05:09:33.564Z\",\n      __v: 0\n    };\n    setNotes(notes.concat(note));\n  };\n\n  // Add a new note\n  const addNote = async (title, description, tag) => {\n    // ToDo: API call\n    const responce = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    console.log(\"adding a new note\");\n    let note = {\n      _id: \"6744068dc5963aee5981e57b7\",\n      user: \"673e0192cb4bebc9ea8656eb\",\n      title: title,\n      description: description,\n      tag: tag,\n      date: \"2024-11-25T05:09:33.564Z\",\n      __v: 0\n    };\n    setNotes(notes.concat(note));\n  };\n\n  // Delete a existing note\n  const deleteNote = id => {\n    // ToDo :  API call\n    console.log(\"Deleting note with id\" + id);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n  // Edit a existing note\n\n  const editNote = async (id, title, description, tag) => {\n    // ToDo: API call\n    const responce = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = responce.json();\n\n    //logic to edit notes in client\n\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["useState","NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","notes","setNotes","getNotes","responce","fetch","method","headers","console","log","note","_id","user","title","description","tag","date","__v","concat","addNote","body","JSON","stringify","deleteNote","id","newNotes","filter","editNote","json","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/prasa/Downloads/react/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport NoteContext from \"./noteContext\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:5000\";\r\n  const notesInitial = []\r\n  const [notes, setNotes] = useState(notesInitial);\r\n\r\n  // Fetch  user all notes on database\r\n  const getNotes =async () => {\r\n    // ToDo: API call\r\n    const responce = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\r\n      }\r\n    });\r\n\r\n\r\n    console.log(\"adding a new note\");\r\n    let note = {\r\n      _id: \"6744068dc5963aee5981e57b7\",\r\n      user: \"673e0192cb4bebc9ea8656eb\",\r\n      title: title,\r\n      description: description,\r\n      tag: tag,\r\n      date: \"2024-11-25T05:09:33.564Z\",\r\n      __v: 0,\r\n    };\r\n    setNotes(notes.concat(note));\r\n  };\r\n\r\n  // Add a new note\r\n  const addNote =async (title, description, tag) => {\r\n    // ToDo: API call\r\n    const responce = await fetch(`${host}/api/notes/addnote`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n\r\n\r\n    console.log(\"adding a new note\");\r\n    let note = {\r\n      _id: \"6744068dc5963aee5981e57b7\",\r\n      user: \"673e0192cb4bebc9ea8656eb\",\r\n      title: title,\r\n      description: description,\r\n      tag: tag,\r\n      date: \"2024-11-25T05:09:33.564Z\",\r\n      __v: 0,\r\n    };\r\n    setNotes(notes.concat(note));\r\n  };\r\n\r\n  // Delete a existing note\r\n  const deleteNote = (id) => {\r\n    // ToDo :  API call\r\n    console.log(\"Deleting note with id\" + id);\r\n    const newNotes = notes.filter((note) => {\r\n      return note._id !== id;\r\n    });\r\n    setNotes(newNotes);\r\n  };\r\n  // Edit a existing note\r\n  \r\n  const editNote = async (id, title, description, tag) => {\r\n    // ToDo: API call\r\n    const responce = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n    \r\n    const json = responce.json();\r\n\r\n    //logic to edit notes in client\r\n\r\n    for (let index = 0; index < notes.length; index++) {\r\n      const element = notes[index];\r\n      if (element._id === id) {\r\n        element.title = title;\r\n        element.description = description;\r\n        element.tag = tag;\r\n      }\r\n    }\r\n  };\r\n    \r\n  return (\r\n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote }}>\r\n       {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NoteState;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}