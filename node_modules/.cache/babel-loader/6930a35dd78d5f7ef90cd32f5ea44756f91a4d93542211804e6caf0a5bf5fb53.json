{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prasa\\\\Downloads\\\\react\\\\inotebook\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n\n  // Fetch  user all notes on database\n  const getNotes = async () => {\n    // ToDo: API call\n    const responce = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\n      }\n    });\n    const json = await responce.json();\n    // console.log(json)\n    setNotes(json);\n  };\n\n  // Add a new note\n  const addNote = async (title, description, tag) => {\n    // ToDo: API call\n    // eslint-disable-next-line\n    const responce = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const note = await responce.json();\n    setNotes(notes.concat(note));\n    // console.log(json)\n\n    // //Adding a custom note\n\n    // console.log(\"adding a new note\");\n  };\n\n  // Delete a existing note\n  const deleteNote = async id => {\n    // ToDo :  API call\n    const responce = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\n      }\n    });\n    const json = await responce.json();\n    console.log(json);\n    console.log(\"Deleting note with id\" + id);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  // Edit a existing note\n  const editNote = async (id, title, description, tag) => {\n    // ToDo: API call\n    const responce = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    // eslint-disable-next-line\n    const json = await responce.json();\n    let newNotes = JSON.parse(JSON.stringify(notes));\n    //logic to edit notes in client\n\n    for (let index = 0; index < notes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["useState","NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","notes","setNotes","getNotes","responce","fetch","method","headers","json","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","console","log","newNotes","filter","_id","editNote","parse","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/prasa/Downloads/react/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport NoteContext from \"./noteContext\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:5000\";\r\n  const notesInitial = []\r\n  const [notes, setNotes] = useState(notesInitial);\r\n\r\n// Fetch  user all notes on database\r\n  const getNotes = async () => {\r\n    // ToDo: API call\r\n    const responce = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\r\n      }\r\n    });\r\n    const json = await responce.json();\r\n    // console.log(json)\r\n    setNotes(json);\r\n  };\r\n\r\n// Add a new note\r\n  const addNote = async (title, description, tag) => {\r\n    // ToDo: API call\r\n     // eslint-disable-next-line\r\n    const responce = await fetch(`${host}/api/notes/addnote`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n\r\n    const note = await responce.json();\r\n    setNotes(notes.concat(note));\r\n    // console.log(json)\r\n\r\n    // //Adding a custom note\r\n\r\n    // console.log(\"adding a new note\");\r\n  };\r\n\r\n// Delete a existing note\r\n  const deleteNote =  async (id) => {\r\n\r\n    // ToDo :  API call\r\n    const responce = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\r\n      }\r\n    });\r\n    const json = await responce.json();\r\n    console.log(json);\r\n\r\n    console.log(\"Deleting note with id\" + id);\r\n    const newNotes = notes.filter((note) => {\r\n      return note._id !== id;\r\n    });\r\n    setNotes(newNotes);\r\n  };\r\n\r\n// Edit a existing note\r\n  const editNote = async (id, title, description, tag) => {\r\n    // ToDo: API call\r\n    const responce = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n     // eslint-disable-next-line\r\n    const json = await responce.json();\r\n\r\n\r\n    let newNotes = JSON.parse(JSON.stringify(notes));\r\n    //logic to edit notes in client\r\n\r\n    for (let index = 0; index < notes.length; index++) {\r\n      const element = newNotes[index];\r\n      if (element._id === id) {\r\n        newNotes[index].title = title;\r\n        newNotes[index].description = description;\r\n        newNotes[index].tag = tag;\r\n        break;\r\n      }\r\n    }\r\n    setNotes(newNotes);\r\n  };\r\n    \r\n  return (\r\n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNotes }}>\r\n       {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NoteState;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}