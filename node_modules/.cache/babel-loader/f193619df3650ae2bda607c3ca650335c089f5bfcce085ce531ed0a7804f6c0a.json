{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prasa\\\\Downloads\\\\react\\\\inotebook\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const notesInitial = [{\n    _id: \"673f45e069a56cff22281360d\",\n    user: \"673e0192cb4bebc9ea8656eb\",\n    title: \"my Title\",\n    description: \"dummy description\",\n    tag: \"personal\",\n    date: \"2024-11-21T14:38:24.396Z\",\n    __v: 0\n  }, {\n    _id: \"673f45f769a56cff2223283611\",\n    user: \"673e0192cb4bebc9ea8656eb\",\n    title: \"my Title\",\n    description: \"dummy description\",\n    tag: \"personal\",\n    date: \"2024-11-21T14:38:47.104Z\",\n    __v: 0\n  }, {\n    _id: \"67440688c593aee5981e57b1\",\n    user: \"673e0192cb4bebc9ea8656eb\",\n    title: \"Nwe Playlist\",\n    description: \"dummy youtube description\",\n    tag: \"youtube\",\n    date: \"2024-11-25T05:09:28.588Z\",\n    __v: 0\n  }, {\n    _id: \"6744068ac5943aee5981e57b3\",\n    user: \"673e0192cb4bebc9ea8656eb\",\n    title: \"Nwe Playlist\",\n    description: \"dummy youtube description\",\n    tag: \"youtube\",\n    date: \"2024-11-25T05:09:30.940Z\",\n    __v: 0\n  }, {\n    _id: \"6744068dc593a5ee5981e57b5\",\n    user: \"673e0192cb4bebc9ea8656eb\",\n    title: \"Nwe Playlist\",\n    description: \"dummy youtube description\",\n    tag: \"youtube\",\n    date: \"2024-11-25T05:09:33.196Z\",\n    __v: 0\n  }];\n  const [notes, setNotes] = useState(notesInitial);\n\n  // Add a new note\n  const addNote = async (title, description, tag) => {\n    // ToDo: API call\n\n    // ToDo: API call\n    // eslint-disable-next-line\n    const responce = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    console.log(\"adding a new note\");\n    let note = {\n      _id: \"6744068dc5963aee5981e57b7\",\n      user: \"673e0192cb4bebc9ea8656eb\",\n      title: title,\n      description: description,\n      tag: tag,\n      date: \"2024-11-25T05:09:33.564Z\",\n      __v: 0\n    };\n    setNotes(notes.concat(note));\n  };\n  // Delete a existing note\n  const deleteNote = id => {\n    // ToDo :  API call\n    console.log(\"Deleting note with id\" + id);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n  // Edit a existing note\n  // eslint-disable-next-line\n  const editNote = async (id, title, description, tag) => {\n    // ToDo: API call\n    const responce = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    // eslint-disable-next-line\n    const json = responce.json();\n\n    //logic to edit notes in client\n\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n      value: {\n        notes,\n        addNote,\n        deleteNote,\n        editNote\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  };\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["useState","NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","_id","user","title","description","tag","date","__v","notes","setNotes","addNote","responce","fetch","method","headers","body","JSON","stringify","console","log","note","concat","deleteNote","id","newNotes","filter","editNote","json","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/prasa/Downloads/react/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport NoteContext from \"./noteContext\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:5000\";\r\n\r\n  const notesInitial = [\r\n    {\r\n      _id: \"673f45e069a56cff22281360d\",\r\n      user: \"673e0192cb4bebc9ea8656eb\",\r\n      title: \"my Title\",\r\n      description: \"dummy description\",\r\n      tag: \"personal\",\r\n      date: \"2024-11-21T14:38:24.396Z\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      _id: \"673f45f769a56cff2223283611\",\r\n      user: \"673e0192cb4bebc9ea8656eb\",\r\n      title: \"my Title\",\r\n      description: \"dummy description\",\r\n      tag: \"personal\",\r\n      date: \"2024-11-21T14:38:47.104Z\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      _id: \"67440688c593aee5981e57b1\",\r\n      user: \"673e0192cb4bebc9ea8656eb\",\r\n      title: \"Nwe Playlist\",\r\n      description: \"dummy youtube description\",\r\n      tag: \"youtube\",\r\n      date: \"2024-11-25T05:09:28.588Z\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      _id: \"6744068ac5943aee5981e57b3\",\r\n      user: \"673e0192cb4bebc9ea8656eb\",\r\n      title: \"Nwe Playlist\",\r\n      description: \"dummy youtube description\",\r\n      tag: \"youtube\",\r\n      date: \"2024-11-25T05:09:30.940Z\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      _id: \"6744068dc593a5ee5981e57b5\",\r\n      user: \"673e0192cb4bebc9ea8656eb\",\r\n      title: \"Nwe Playlist\",\r\n      description: \"dummy youtube description\",\r\n      tag: \"youtube\",\r\n      date: \"2024-11-25T05:09:33.196Z\",\r\n      __v: 0,\r\n    },\r\n  ];\r\n\r\n  const [notes, setNotes] = useState(notesInitial);\r\n\r\n  // Add a new note\r\n  const addNote =async (title, description, tag) => {\r\n    // ToDo: API call\r\n\r\n    // ToDo: API call\r\n    // eslint-disable-next-line\r\n    const responce = await fetch(`${host}/api/notes/addnote`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n\r\n\r\n    console.log(\"adding a new note\");\r\n    let note = {\r\n      _id: \"6744068dc5963aee5981e57b7\",\r\n      user: \"673e0192cb4bebc9ea8656eb\",\r\n      title: title,\r\n      description: description,\r\n      tag: tag,\r\n      date: \"2024-11-25T05:09:33.564Z\",\r\n      __v: 0,\r\n    };\r\n    setNotes(notes.concat(note));\r\n  };\r\n  // Delete a existing note\r\n  const deleteNote = (id) => {\r\n    // ToDo :  API call\r\n    console.log(\"Deleting note with id\" + id);\r\n    const newNotes = notes.filter((note) => {\r\n      return note._id !== id;\r\n    });\r\n    setNotes(newNotes);\r\n  };\r\n  // Edit a existing note\r\n  // eslint-disable-next-line\r\n  const editNote = async (id, title, description, tag) => {\r\n    // ToDo: API call\r\n    const responce = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjczZTAxOTJjYjRiZWJjOWVhODY1NmViIn0sImlhdCI6MTczMjE4MDc1MX0.-50uYZWVsd40QuqZNjNxs_3q9YoUovXNzCtrk9esKeg\"\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n    // eslint-disable-next-line\r\n    const json = responce.json();\r\n\r\n    //logic to edit notes in client\r\n\r\n    for (let index = 0; index < notes.length; index++) {\r\n      const element = notes[index];\r\n      if (element._id === id) {\r\n        element.title = title;\r\n        element.description = description;\r\n        element.tag = tag;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote }}>\r\n        {props.children}\r\n      </NoteContext.Provider>\r\n    );\r\n  };\r\n};\r\n\r\nexport default NoteState;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}